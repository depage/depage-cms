// {{{ .doc-properties
.doc-properties {
    position: relative;
    flex: 1 1 auto;
    background: $backgroundLighterColor;
    overflow-y: auto !important;

    fieldset {
        padding-left: 15px;
        padding-right: 15px;
        @include transition($transitionTime, "background-color");
    }
    fieldset.focus {
        background: #ffffff;
    }
    figure.thumb {
        clear: left;
        float: left;
        margin-right: 10px;
        margin-bottom: 10px;
    }
}
// }}}
// {{{ .doc-properties .input-multiple.skin-checkbox
.doc-properties {
    .depage-form .input-multiple.skin-checkbox {
        $tagIconSize: 18px;
        margin-bottom: -3px;

        label {
            position: relative;
            display: inline-block;
            margin-right: 1px;
            margin-bottom: 1px;
        }
        input[type="checkbox"] {
            position: absolute;
            opacity: 0;
            width: 0;
        }
        input[type="checkbox"] + span {
            display: inline-block;
            padding: 3px 10px;
            padding-left: $tagIconSize * 1.25;
            //border: 1px solid transparent;
            color: $textBaseColor;
            cursor: pointer;
            letter-spacing: 0.03em;
            @include radius($cornerRadius);

            &:before {
                top: 6px;
                left: 3px;
                width: $tagIconSize;
                height: $tagIconSize;
                @include icon-base("checkbox-unchecked", $tagIconSize);
            }
            &:hover {
                background: $backgroundColor;
                @include box-shadow(inset 0 0 3px 0 rgba(0, 0, 0, 0.5));

                &:before {
                    @include icon-base("checkbox-unchecked-white", $tagIconSize);
                }
            }
        }
        input[type="checkbox"]:checked + span {
            background: darken($backgroundColor, 35%);
            color: $textBrightColor;
            @include box-shadow(inset 0 0 4px 0 rgba(0, 0, 0, 0.7));

            &:before {
                @include icon-base("checkbox-checked-white", $tagIconSize);
            }
        }
        input[type="checkbox"]:focus + span {
            @include box-shadow(inset 0 0 0 1px $selectionBackgroundColor);
        }
        input[type="checkbox"]:checked:focus + span {
            @include box-shadow(inset 0 0 4px 1px $selectionBackgroundColor);
        }
        input[type="checkbox"]:disabled + span {
            cursor: default;
        }
    }
}
// }}}
// {{{ .doc-properties .doc-property-fieldset
.doc-properties .doc-property-fieldset {
    padding-top: 8px;
    padding-bottom: 8px;

    > legend {
        font-size: $fSizeXS;
        letter-spacing: 0.05em;
        margin-top: 0;
        margin-bottom: 5px;
        font-weight: bold;
        text-transform: uppercase;
    }
    > p {
        $labelWidth: 40px;
        margin-bottom: 0;

        > .depage-label,
        > label > .depage-label {
            position: absolute;
            left: 0;
            top: 0;
            padding-top: 8px;
            padding-left: 10px;
            width: $labelWidth;
            height: auto;
            min-height: 0;
            z-index: 10;
        }
        input,
        textarea,
        .textarea {
            padding-left: $labelWidth;
            border-color: transparent !important;
            border-bottom-color: $backgroundLighterColor !important;
            @include radius(0);

        }
        .textarea,
        .textarea .textarea-content {
            min-height: 1.5em !important;
        }
        .textarea .textarea-content {
            padding: 0;
            padding-top: 1px;
        }
        &:first-of-type {
            input,
            textarea,
            .textarea {
                @include radius($cornerRadius, "top", "left");
                @include radius($cornerRadius, "top", "right");
            }
        }
        &:last-of-type  {
            input,
            textarea,
            .textarea {
                @include radius($cornerRadius, "bottom", "left");
                @include radius($cornerRadius, "bottom", "right");
                border-bottom-color: transparent !important;
            }
        }
    }
    @media (pointer:coarse) {
        &.lang-fieldset {
            .depage-label {
                padding-top: 8px * $touchScaleFont;
            }
            input,
            textarea {
                font-size: $fSizeM * $touchScaleFont !important;
            }
            .textarea {
                h1,
                h2,
                h3,
                h4,
                h5,
                h6,
                li,
                dt,
                dd,
                p {
                    font-size: $fSizeM * $touchScaleFont !important;
                }
            }
        }
    }
    &.focus {
        > legend {
            font-weight: bold;
        }
        > p {
            &:first-of-type,
            &:last-child {
                input,
                textarea,
                .textarea {
                    @include radius(0);
                }
            }
        }
    }
    label:focus-within .depage-label {
        color: $textBaseColor;
    }
    > p > .depage-label,
    > p > label > .depage-label {
        font-size: $fSizeS;
        color: $textLighterColor;
    }
}
// }}}
// {{{ .doc-properties .doc-property-meta
.doc-properties .doc-property-meta {
    $iconSize: 32px;
    $releaseButtonWidth: 150px;

    background-color: $backgroundColor;
    padding-bottom: 3px;

    > legend {
        margin-bottom: 2px;
        display: none;
    }
    p {
        position: relative;
        line-height: $treeLineHeight;
    }
    p.status {
        padding-right: $releaseButtonWidth;
        line-height: $iconSize * 0.5;
        min-height: $iconSize;
        display: table;
        padding-left: 20px;
        margin-bottom: 5px;

        span {
            display: table-cell;
            vertical-align: middle;
            padding-left: 5px;

            @media screen and (max-width: 1030px) {
                display: none;
            }
        }
        a {
            color: $textBaseColor;
            text-decoration: underline;
        }
    }
    p.date {
        //font-size: $fSizeS;
        //font-style: italic;
        color: $textLighterColor;
    }
    .opener {
        position: absolute;
        top: $iconSize * 0.5 - 5px;
        left: 10px;
        display: block;
        content: " ";
        float: left;
        width: 24px;
        height: 24px;
        margin-top: 1px;
        cursor: pointer;
        @include icon-base("closed", 24px);
    }
    &.open .opener {
        @include icon("open", 24px);
    }
    p.release {
        position: absolute;
        top: 7px;
        right: 15px;
        width: $releaseButtonWidth;

        a {
            display: block;
            //float: right;
            width: $releaseButtonWidth;
            text-align: center;
            padding: 3px 10px;
            color: $selectionBackgroundColor;
            @include radius($cornerRadius);
            @include transition($transitionTime, "background-color, color");
        }
    }
    &.open p.release a,
    p.release a:hover {
        background-color: $selectionBackgroundColor;
        color: $textBrightColor;
        font-weight: bold;
    }
    p.release a.disabled,
    p.page-versions a.disabled {
        background-color: transparent;
        color: $textDisabledColor;
        font-weight: normal;
    }
    p.page-versions {
        position: relative;

        select,
        .selectize-control {
            margin-right: 70px;
        }

        a.button {
            position: absolute;
            top: 0;
            right: 0;
            padding-top: 3px;
        }
    }

    > p.input-url input {
        @include radius($cornerRadius);
    }

    div.details {
        display: none;

        span.depage-label {
            display: none;
        }
    }

    span.opener,
    i.icon {
        --touch-scale: 1;
    }
    i.icon {
        display: table-cell;
        position: relative;
        margin-top: -2px;
        padding: 0;
        width: calc(#{$iconSize} * var(--touch-scale));

        &:after {
            position: absolute;
            content: " ";
            display: block;
            top: 0;
            left: 0;
            width: calc(#{$iconSize} * var(--touch-scale));
            height: calc(#{$iconSize} * var(--touch-scale));
            @include icon-base("", $iconSize);
        }
    }
    i.icon-published::after {
        @include icon("published", $iconSize);
    }
    i.icon-unpublished:after {
        @include icon("unpublished", $iconSize);
    }
    i.icon-unreleased:after {
        @include icon("unreleased", $iconSize);
    }

    &.open {
        div.details {
            display: block;
            padding-top: $treeLineHeight * 0.5;
        }
    }
}
// }}}
// {{{ .doc-properties .error
.doc-properties .error {
    padding: 15px;
}
// }}}
// {{{ doc-properties edit-img
.doc-properties .edit-img {
    figure.thumb {
        margin-bottom: 20px;
    }
    figure.thumb + p {
        margin-top: 20px;
    }
    figure.thumb .choose-image-center-button {
        --touch-scale: 1;
        $size: 20px;
        display: block;
        position: absolute;
        width: $size * 1.75;
        height: $size;
        left: 0;
        bottom: -$size - 4px;
        border-radius: $cornerRadius;
        background-color: $baseColor;
        cursor: pointer;

        &::after {
            display: block;
            content: " ";
            position: absolute;
            left: $size * 0.75 / 2;
            width: $size;
            height: $size;
            @include icon-base("choose-image-center", $size);
        }

        &:hover {
            background-color: $backgroundColor;
        }
    }
    p {
        clear: none;
        margin-left: $thumbSize + 15px;
        @media screen and (max-width: 1030px) {
            margin-left: $thumbSizeSmall + 15px;
        }
    }
}
// }}}
// {{{ doc-properties edit-a
.doc-properties .edit-a {
    padding-right: 95px;

    .input-single.edit-target {
        position: absolute;
        z-index: 100;
        bottom: 15px;
        right: 15px;
    }
}
// }}}

// vim:set ft=scss sw=4 sts=4 fdm=marker :
